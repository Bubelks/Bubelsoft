///<amd-module name="app"/>
define("app", ["require", "exports", "home/home", "logIn/logIn", "company/company", "buildings/building", "utils/router", "knockout", "utils/navigator"], function (require, exports, home_1, logIn_1, company_1, buildingsApp_1, router_1, ko, navigator) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var App = (function () {
        function App() {
            var _this = this;
            this.goTo = function (url) {
                navigator.navigate(url);
            };
            this.home = ko.observable(null);
            this.logIn = ko.observable(null);
            this.company = ko.observable(null);
            this.useBuildingsApp = ko.observable(false);
            this.buildingsApp = new buildingsApp_1.BuildingsApp();
            this.router = new router_1.Router(this.createRouterOptions());
            this.router.add("home", function () { return _this.showHome(); });
            this.router.add("logIn", function () { return _this.showLogIn(); });
            this.router.add("company", function () { return _this.showCompany(); });
            this.router.add("buildings", function () { return _this.showBuildings(); });
            this.router.start();
        }
        App.prototype.unauthorize = function () {
            navigator.navigate("logIn");
        };
        App.prototype.authorize = function () {
            navigator.navigate("home");
        };
        App.prototype.openUserMenu = function () {
            $("nav .dropdown .user-avatar").toggleClass("show");
            $("nav .dropdown .dropdown-menu").toggleClass("show");
        };
        App.prototype.logOut = function () {
            document.cookie = "bubelsoftToken=; expires=Thu, 01 Jan 1970 00:00:01 GMT;";
            navigator.navigate("logIn");
        };
        App.prototype.showCompany = function () {
            this.hideAll();
            this.company(new company_1.Company());
        };
        App.prototype.showBuildings = function () {
            this.hideAll();
            this.useBuildingsApp(true);
        };
        App.prototype.showHome = function () {
            this.hideAll();
            this.home(new home_1.Home());
        };
        App.prototype.showLogIn = function () {
            var _this = this;
            this.hideAll();
            this.logIn(new logIn_1.LogIn(function () { return _this.authorize(); }));
        };
        App.prototype.hideAll = function () {
            if (this.logIn() !== null) {
                this.logIn().dispose();
                this.logIn(null);
            }
            if (this.home() !== null) {
                this.home().dispose();
                this.home(null);
            }
            if (this.company() !== null) {
                this.company().dispose();
                this.company(null);
            }
            this.useBuildingsApp(false);
        };
        App.prototype.createRouterOptions = function () {
            return {
                mode: router_1.RouterMode.Hash,
                root: window.location.host
            };
        };
        return App;
    }());
    App.apiUrl = "http://localhost:5000/api";
    exports.App = App;
    var AppSingleton = (function () {
        function AppSingleton() {
        }
        AppSingleton.setInstance = function (app) {
            this.instance = app;
        };
        AppSingleton.getInstance = function () {
            return this.instance;
        };
        return AppSingleton;
    }());
    exports.AppSingleton = AppSingleton;
});
//# sourceMappingURL=app.js.map
///<amd-module name="buildings/building"/>
define("buildings/building", ["require", "exports", "utils/router", "buildings/create/create", "knockout"], function (require, exports, router_1, create_1, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BuildingsApp = (function () {
        function BuildingsApp() {
            var _this = this;
            this.create = ko.observable(null);
            this.router = new router_1.Router(this.createRouterOptions());
            this.router.add("buildings/:buildingId/create", function (buildingId) { return _this.showCreate(buildingId); });
            this.router.add("buildings", function () { return _this.showHome(); });
            this.router.start();
        }
        BuildingsApp.prototype.showHome = function () {
            this.hideAll();
        };
        BuildingsApp.prototype.showCreate = function (buildingId) {
            this.create(new create_1.Create(buildingId));
        };
        BuildingsApp.prototype.createRouterOptions = function () {
            return {
                mode: router_1.RouterMode.History,
                root: window.location.host
            };
        };
        BuildingsApp.prototype.hideAll = function () {
            if (this.create() != null)
                this.create().dispose();
            this.create(null);
        };
        BuildingsApp.prototype.dispose = function () {
        };
        return BuildingsApp;
    }());
    exports.BuildingsApp = BuildingsApp;
});
//# sourceMappingURL=buildingsApp.js.map
///<amd-module name="company/company"/>
define("company/company", ["require", "exports", "knockout"], function (require, exports, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Company = (function () {
        function Company() {
            this.name = "Company";
            this.visibleWorkers = ko.observableArray([
                {
                    name: "Name1",
                    firstName: "FirstName1",
                    lastName: "LastName1",
                    email: "mail1@mail.com",
                    tel: "500500500",
                    role: "admin"
                },
                {
                    name: "Name1",
                    firstName: "FirstName1",
                    lastName: "LastName1",
                    email: "mail1@mail.com",
                    tel: "500500500",
                    role: "admin"
                },
                {
                    name: "Name1",
                    firstName: "FirstName1",
                    lastName: "LastName1",
                    email: "mail1@mail.com",
                    tel: "500500500",
                    role: "admin"
                },
                {
                    name: "Name1",
                    firstName: "FirstName1",
                    lastName: "LastName1",
                    email: "mail1@mail.com",
                    tel: "500500500",
                    role: "admin"
                },
                {
                    name: "Name1",
                    firstName: "FirstName1",
                    lastName: "LastName1",
                    email: "mail1@mail.com",
                    tel: "500500500",
                    role: "admin"
                }
            ]);
        }
        Company.prototype.dispose = function () {
        };
        return Company;
    }());
    exports.Company = Company;
});
//# sourceMappingURL=company.js.map
///<amd-module name="home/home"/>
define("home/home", ["require", "exports", "home/buildings/buildings", "home/notifications/notifications", "utils/communication/rest", "knockout"], function (require, exports, buildings_1, notifications_1, rest, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Home = (function () {
        function Home() {
            var _this = this;
            this.buildings = ko.observable(new buildings_1.Buildings([], null));
            this.notifications = ko.observable(new notifications_1.Notifications([]));
            this.getBuildings()
                .then(function (buildings) {
                _this.notifications(new notifications_1.Notifications(buildings.map(function (b) { return b.name; })));
                _this.buildings(new buildings_1.Buildings(buildings, _this.notifications().showFor));
            });
        }
        Home.prototype.getBuildings = function () {
            return rest.get("buildings", "");
        };
        Home.prototype.dispose = function () {
            if (this.buildings())
                this.buildings().dispose();
            if (this.notifications())
                this.notifications().dispose();
        };
        return Home;
    }());
    exports.Home = Home;
});
//# sourceMappingURL=home.js.map
///<amd-module name="logIn/logIn"/>
define("logIn/logIn", ["require", "exports", "knockout", "utils/communication/rest"], function (require, exports, ko, rest) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var LogIn = (function () {
        function LogIn(onLogIn) {
            var _this = this;
            this.validate = function () { return _this.userName().length !== 0 && _this.password().length !== 0; };
            this.userName = ko.observable("");
            this.password = ko.observable("");
            this.invalid = ko.observable(false);
            this.loading = ko.observable(false);
            this.onLogIn = onLogIn;
        }
        LogIn.prototype.logIn = function () {
            var _this = this;
            this.loading(true);
            if (!this.validate())
                this.invalid(true);
            else
                rest.post("user", "logIn", { userName: this.userName(), password: this.password() })
                    .done(function (data) {
                    _this.setCookies(data);
                    _this.onLogIn();
                    _this.invalid(false);
                })
                    .fail(function () { return _this.invalid(true); });
            this.loading(false);
            document.getElementsByTagName("login")[0].getElementsByTagName("button")[0].blur();
        };
        LogIn.prototype.dispose = function () { };
        LogIn.prototype.setCookies = function (data) {
            document.cookie = "bubelsoftToken=" + data.token + "; expires=" + data.expiration + "; path=/";
        };
        return LogIn;
    }());
    exports.LogIn = LogIn;
});
//# sourceMappingURL=logIn.js.map
///<amd-module name="utils/navigator"/>
define("utils/navigator", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function navigate(path) {
        window.location.href = window.location.href.replace(/#(.*)$/, "") + "#" + path;
    }
    exports.navigate = navigate;
});
//# sourceMappingURL=navigator.js.map
///<amd-module name="utils/router"/>
define("utils/router", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Router = (function () {
        function Router(options) {
            var _this = this;
            this.root = "/";
            this.start = function () {
                var current = _this.root;
                var fn = function () {
                    if (current !== _this.getFragment()) {
                        current = _this.getFragment();
                        _this.check(current);
                    }
                };
                clearInterval(_this.listener);
                _this.listener = setInterval(fn, 50);
            };
            this.mode = options && options.mode && options.mode === RouterMode.History && !!(history.pushState)
                ? RouterMode.History
                : RouterMode.Hash;
            this.root = options && options.root ? "/" + this.clearSlashes(options.root) + "/" : "/";
            this.routes = new Array();
        }
        Router.prototype.add = function (route, handler) {
            this.routes.push({ route: route, handler: handler });
            return this;
        };
        Router.prototype.remove = function (route) {
            var _this = this;
            this.routes.forEach(function (r, i) {
                if (r.route === route) {
                    _this.routes.splice(i, 1);
                }
            });
            return this;
        };
        Router.prototype.check = function (fragment) {
            if (fragment === null || typeof fragment === "undefined")
                fragment = this.getFragment();
            for (var i = 0; i < this.routes.length; i++) {
                var variableNames = [];
                var route = this.routes[i].route.replace(/([:*])(\w+)/g, function (full, dots, name) {
                    variableNames.push(name);
                    return "([^\/]+)";
                }) + "(?:\/|$)";
                var match = fragment.match(new RegExp(route));
                if (match) {
                    match.shift();
                    this.routes[i].handler.apply({}, match);
                    return;
                }
            }
        };
        Router.prototype.getFragment = function () {
            var fragment;
            if (this.mode === RouterMode.History) {
                var match = window.location.href.match(/#(.*)$/);
                fragment = match ? match[1] : "";
            }
            else {
                var match = window.location.href.match(/#(.*)$/);
                fragment = match ? match[1].split("/")[0] : "";
            }
            return this.clearSlashes(fragment);
        };
        Router.prototype.clearSlashes = function (path) {
            return path.toString().replace(/\/$/, "").replace(/^\//, "");
        };
        return Router;
    }());
    exports.Router = Router;
    var RouterMode;
    (function (RouterMode) {
        RouterMode[RouterMode["Hash"] = 0] = "Hash";
        RouterMode[RouterMode["History"] = 1] = "History";
    })(RouterMode = exports.RouterMode || (exports.RouterMode = {}));
});
//# sourceMappingURL=router.js.map
///<amd-module name="buildings/create/create"/>
define("buildings/create/create", ["require", "exports", "buildings/create/steps/estimate", "buildings/create/steps/building", "buildings/create/steps/company", "utils/communication/rest", "knockout", "utils/navigator"], function (require, exports, estimate_1, building_1, company_1, rest, ko, navigator) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Create = (function () {
        function Create(buildingId) {
            var _this = this;
            this.currentStep = ko.observable(null);
            this.buildingId = buildingId;
            this.getBuilding().done(function (data) {
                _this.buildingStep = new building_1.BuildingStep(data.name);
                _this.estimateStep = new estimate_1.EstimateStep(_this.buildingStep);
                _this.companyStep = new company_1.CompanyStep(_this.buildingStep, data.company);
                _this.buildingStep.setNext(_this.estimateStep);
                _this.buildingStep.setBack(_this.companyStep);
                _this.currentStep(_this.companyStep);
                _this.currentStep().activate(true);
            });
        }
        Create.prototype.next = function () {
            //if (!this.currentStep().valid()) return;
            var nextStep = this.currentStep().next();
            if (nextStep !== null)
                this.changeStep(nextStep);
            else
                this.save();
        };
        Create.prototype.back = function () {
            var backStep = this.currentStep().back();
            if (backStep !== null)
                this.changeStep(backStep);
        };
        Create.prototype.cancel = function () {
            navigator.navigate("home");
        };
        Create.prototype.save = function () {
            var _this = this;
            var building = {
                name: this.buildingStep.name(),
                company: this.companyStep.getDto()
            };
            rest.put("buildings", "" + this.buildingId, building)
                .done(function () { return navigator.navigate("buildings/" + _this.buildingId); });
        };
        Create.prototype.getBuilding = function () {
            return rest.get("buildings", "" + this.buildingId);
        };
        Create.prototype.changeStep = function (newStep) {
            this.currentStep().activate(false);
            this.currentStep(newStep);
            this.currentStep().activate(true);
        };
        Create.prototype.dispose = function () {
        };
        return Create;
    }());
    exports.Create = Create;
    var Step;
    (function (Step) {
        Step[Step["Company"] = 0] = "Company";
        Step[Step["Building"] = 1] = "Building";
        Step[Step["Estimate"] = 2] = "Estimate";
    })(Step || (Step = {}));
});
//# sourceMappingURL=create.js.map
///<amd-module name="home/buildings/building"/>
define("home/buildings/building", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Building = (function () {
        function Building(base, showNotifications) {
            this.name = base.name;
            this.ownedByMy = base.ownedByMy;
            this.company = base.company;
            this.showNotifications = showNotifications;
        }
        Building.prototype.icon = function () {
            if (this.ownedByMy)
                return "fa-circle";
            return "fa-circle-o";
        };
        Building.prototype.contractType = function () {
            if (this.ownedByMy)
                return "Main-Contract";
            return "Sub-Contract";
        };
        return Building;
    }());
    exports.Building = Building;
});
//# sourceMappingURL=building.js.map
///<amd-module name="home/buildings/buildings"/>
define("home/buildings/buildings", ["require", "exports", "home/buildings/building", "knockout"], function (require, exports, building_1, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Buildings = (function () {
        function Buildings(buildings, showNotifications) {
            var _this = this;
            this.buildings = buildings.map(function (b) { return new building_1.Building(b, showNotifications); });
            this.contractTypes = ko.observableArray([
                { type: ContractType.All, displayName: "All" },
                { type: ContractType.SubContract, displayName: "Sub-Contract" },
                { type: ContractType.MainContract, displayName: "Main-contract" }
            ]);
            this.selectedType = ko.observable(this.contractTypes()[0]);
            this.visibleBuilding = ko.computed(function () {
                switch (_this.selectedType().type) {
                    case ContractType.SubContract:
                        return _this.buildings.filter(function (b) { return !b.ownedByMy; });
                    case ContractType.MainContract:
                        return _this.buildings.filter(function (b) { return b.ownedByMy; });
                    default:
                        return _this.buildings;
                }
            });
        }
        Buildings.prototype.dispose = function () {
        };
        return Buildings;
    }());
    exports.Buildings = Buildings;
    var ContractType;
    (function (ContractType) {
        ContractType[ContractType["All"] = 0] = "All";
        ContractType[ContractType["SubContract"] = 1] = "SubContract";
        ContractType[ContractType["MainContract"] = 2] = "MainContract";
    })(ContractType || (ContractType = {}));
});
//# sourceMappingURL=buildings.js.map
///<amd-module name="home/notifications/notifications"/>
define("home/notifications/notifications", ["require", "exports", "knockout"], function (require, exports, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Notifications = (function () {
        function Notifications(buildingNames) {
            var _this = this;
            this.showFor = function (buildingName) {
                _this.selectedBuildingName(buildingName);
                _this.selectedType(_this.notificationTypes().filter(function (n) { return n.type === NotificationType.Building; })[0]);
                _this.specifyBuilding(true);
            };
            this.allNotifcations = ko.observableArray([
                { name: "Notification1", source: "Building1", content: "KOCHAM DOMiNKIĘ BARDZO BARDZO <3", isNew: true, type: NotificationType.Building },
                { name: "Notification2", source: "Company1", content: "KOCHAM DOMiNKIĘ BARDZO BARDZO <3 x22222", isNew: false, type: NotificationType.Company }
            ]);
            this.notificationTypes = ko.observableArray([
                { type: NotificationType.All, displayName: "All" },
                { type: NotificationType.Building, displayName: "Building" },
                { type: NotificationType.Company, displayName: "Company" }
            ]);
            this.selectedType = ko.observable(this.notificationTypes()[0]);
            this.buildingNames = ko.observableArray(buildingNames);
            this.selectedBuildingName = ko.observable("");
            this.buildingsNamesVisible = ko.computed(function () { return _this.selectedType().type === NotificationType.Building; });
            this.specifyBuilding = ko.observable(false);
            this.newNotificationsCount = ko.observable(this.allNotifcations().filter(function (n) { return n.isNew; }).length);
            this.visibleNotifications = ko.computed(function () {
                switch (_this.selectedType().type) {
                    case NotificationType.Building:
                        return _this.allNotifcations()
                            .filter(function (n) {
                            return n.type === NotificationType.Building &&
                                (!_this.specifyBuilding() || _this.selectedBuildingName() === n.source);
                        });
                    case NotificationType.Company:
                        return _this.allNotifcations().filter(function (n) { return n.type === NotificationType.Company; });
                    default:
                        return _this.allNotifcations();
                }
            });
        }
        Notifications.prototype.toggleSpecifyBuilding = function () {
            this.specifyBuilding(!this.specifyBuilding());
        };
        Notifications.prototype.dispose = function () {
            this.visibleNotifications.dispose();
            this.buildingsNamesVisible.dispose();
        };
        return Notifications;
    }());
    exports.Notifications = Notifications;
    var NotificationType;
    (function (NotificationType) {
        NotificationType[NotificationType["All"] = 0] = "All";
        NotificationType[NotificationType["Building"] = 1] = "Building";
        NotificationType[NotificationType["Company"] = 2] = "Company";
    })(NotificationType || (NotificationType = {}));
});
//# sourceMappingURL=notifications.js.map
///<amd-module name="utils/communication/rest"/>
define("utils/communication/rest", ["require", "exports", "jquery", "app"], function (require, exports, $, app_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function get(controller, action) {
        var url = app_1.App.apiUrl + "/" + controller + "/" + action;
        return $.ajax({
            headers: {
                "Authorization": "bearer " + readToken()
            },
            url: url
        }).always(function (xhr) {
            if (xhr.status === 401)
                app_1.AppSingleton.getInstance().unauthorize();
        });
        ;
    }
    exports.get = get;
    function post(controller, action, body) {
        var url = app_1.App.apiUrl + "/" + controller + "/" + action;
        return $.ajax({
            contentType: 'application/json',
            data: JSON.stringify(body),
            type: "POST",
            headers: {
                "authorization": "bearer " + readToken()
            },
            url: url
        }).always(function (xhr) {
            if (xhr.status === 401)
                app_1.AppSingleton.getInstance().unauthorize();
        });
    }
    exports.post = post;
    function put(controller, action, body) {
        var url = app_1.App.apiUrl + "/" + controller + "/" + action;
        return $.ajax({
            contentType: 'application/json',
            data: JSON.stringify(body),
            type: "PUT",
            headers: {
                "authorization": "bearer " + readToken()
            },
            url: url
        }).always(function (xhr) {
            if (xhr.status === 401)
                app_1.AppSingleton.getInstance().unauthorize();
        });
    }
    exports.put = put;
    function ping() {
        return get("buildings", "");
    }
    exports.ping = ping;
    function readToken() {
        var nameEQ = "bubelsoftToken=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ')
                c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0)
                return c.substring(nameEQ.length, c.length);
        }
        return null;
    }
});
//# sourceMappingURL=rest.js.map
///<amd-module name="buildings/create/steps/building"/>
define("buildings/create/steps/building", ["require", "exports", "knockout"], function (require, exports, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var BuildingStep = (function () {
        function BuildingStep(name) {
            this.name = ko.observable(name);
            this.active = ko.observable(false);
        }
        BuildingStep.prototype.valid = function () { throw new Error("Not implemented"); };
        BuildingStep.prototype.next = function () {
            return this.nextStep;
        };
        BuildingStep.prototype.back = function () {
            return this.backStep;
        };
        BuildingStep.prototype.activate = function (active) {
            this.active(active);
        };
        BuildingStep.prototype.header = function () { return "Building"; };
        BuildingStep.prototype.setNext = function (next) {
            this.nextStep = next;
        };
        BuildingStep.prototype.setBack = function (back) {
            this.backStep = back;
        };
        return BuildingStep;
    }());
    exports.BuildingStep = BuildingStep;
});
//# sourceMappingURL=building.js.map
///<amd-module name="buildings/create/steps/company"/>
define("buildings/create/steps/company", ["require", "exports", "knockout"], function (require, exports, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var CompanyStep = (function () {
        function CompanyStep(nextStep, company) {
            this.id = company.id;
            this.name = ko.observable(company.name);
            this.nip = ko.observable(company.nip);
            this.phoneNumber = ko.observable(company.phoneNumber);
            this.eMail = ko.observable(company.eMail);
            this.city = ko.observable(company.city);
            this.postCode = ko.observable(company.postCode);
            this.street = ko.observable(company.street);
            this.placeNumber = ko.observable(company.placeNumber);
            this.nextStep = nextStep;
            this.active = ko.observable(false);
        }
        CompanyStep.prototype.valid = function () { throw new Error("Not implemented"); };
        CompanyStep.prototype.next = function () {
            return this.nextStep;
        };
        CompanyStep.prototype.back = function () {
            return null;
        };
        CompanyStep.prototype.activate = function (active) {
            this.active(active);
        };
        CompanyStep.prototype.header = function () { return "Company"; };
        CompanyStep.prototype.getDto = function () {
            return {
                id: this.id,
                name: this.name(),
                nip: this.nip(),
                phoneNumber: this.phoneNumber(),
                eMail: this.eMail(),
                city: this.city(),
                postCode: this.postCode(),
                street: this.street(),
                placeNumber: this.placeNumber()
            };
        };
        return CompanyStep;
    }());
    exports.CompanyStep = CompanyStep;
});
//# sourceMappingURL=company.js.map
///<amd-module name="buildings/create/steps/estimate"/>
define("buildings/create/steps/estimate", ["require", "exports", "knockout"], function (require, exports, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var EstimateStep = (function () {
        function EstimateStep(backStep) {
            this.backStep = backStep;
            this.active = ko.observable(false);
        }
        EstimateStep.prototype.valid = function () { throw new Error("Not implemented"); };
        EstimateStep.prototype.next = function () {
            return null;
        };
        EstimateStep.prototype.back = function () {
            return this.backStep;
        };
        EstimateStep.prototype.activate = function (active) {
            this.active(active);
        };
        EstimateStep.prototype.header = function () { return "Estimate"; };
        return EstimateStep;
    }());
    exports.EstimateStep = EstimateStep;
});
//# sourceMappingURL=estimate.js.map