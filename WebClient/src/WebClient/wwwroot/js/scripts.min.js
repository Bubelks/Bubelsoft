///<amd-module name="app"/>
define("app", ["require", "exports", "home/home", "logIn/logIn", "utils/router", "knockout"], function (require, exports, home_1, logIn_1, router_1, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var App = (function () {
        function App() {
            var _this = this;
            this.home = ko.observable(null);
            this.logIn = ko.observable(null);
            this.router = new router_1.Router(this.createRouterOptions());
            this.router.add("home", function () { return _this.goToHome(); });
            this.router.add("logIn", function () { return _this.goToLogIn(); });
            this.router.start();
            this.router.navigate("home");
        }
        App.prototype.unauthorize = function () {
            this.router.navigate("logIn");
        };
        App.prototype.authorize = function () {
            this.router.navigate("home");
        };
        App.prototype.openUserMenu = function () {
            $("nav .dropdown .dropdown-menu").toggleClass("show");
        };
        App.prototype.logOut = function () {
            document.cookie = "bubelsoftToken=; expires=Thu, 01 Jan 1970 00:00:01 GMT;";
            this.router.navigate("logIn");
        };
        App.prototype.goToHome = function () {
            this.home(new home_1.Home());
            if (this.logIn() !== null) {
                this.logIn().dispose();
                this.logIn(null);
            }
        };
        App.prototype.goToLogIn = function () {
            var _this = this;
            this.logIn(new logIn_1.LogIn(function () { return _this.authorize(); }));
            if (this.home() !== null) {
                this.home().dispose();
                this.home(null);
            }
        };
        App.prototype.createRouterOptions = function () {
            return {
                mode: router_1.RouterMode.History,
                root: window.location.host
            };
        };
        return App;
    }());
    App.apiUrl = "http://localhost:5000/api";
    exports.App = App;
    var AppSingleton = (function () {
        function AppSingleton() {
        }
        AppSingleton.setInstance = function (app) {
            this.instance = app;
        };
        AppSingleton.getInstance = function () {
            return this.instance;
        };
        return AppSingleton;
    }());
    exports.AppSingleton = AppSingleton;
});
//# sourceMappingURL=app.js.map
///<amd-module name="home/home"/>
define("home/home", ["require", "exports", "home/buildings/buildings", "home/notifications/notifications"], function (require, exports, buildings_1, notifications_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Home = (function () {
        function Home() {
            this.buildings = new buildings_1.Buildings();
            this.notifications = new notifications_1.Notifications();
        }
        Home.prototype.dispose = function () {
            this.buildings.dispose();
            this.notifications.dispose();
        };
        return Home;
    }());
    exports.Home = Home;
});
//# sourceMappingURL=home.js.map
///<amd-module name="logIn/logIn"/>
define("logIn/logIn", ["require", "exports", "knockout", "utils/communication/rest"], function (require, exports, ko, rest) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var LogIn = (function () {
        function LogIn(onLogIn) {
            var _this = this;
            this.validate = function () { return _this.userName().length !== 0 && _this.password().length !== 0; };
            this.userName = ko.observable("");
            this.password = ko.observable("");
            this.invalid = ko.observable(false);
            this.loading = ko.observable(false);
            this.onLogIn = onLogIn;
        }
        LogIn.prototype.logIn = function () {
            var _this = this;
            this.loading(true);
            if (!this.validate())
                this.invalid(true);
            else
                rest.post("user", "logIn", { userName: this.userName(), password: this.password() })
                    .done(function (data) {
                    _this.setCookies(data);
                    _this.onLogIn();
                    _this.invalid(false);
                })
                    .fail(function () { return _this.invalid(true); });
            this.loading(false);
            document.getElementsByTagName("login")[0].getElementsByTagName("button")[0].blur();
        };
        LogIn.prototype.dispose = function () { };
        LogIn.prototype.setCookies = function (data) {
            document.cookie = "bubelsoftToken=" + data.token + "; expires=" + data.expiration + "; path=/";
        };
        return LogIn;
    }());
    exports.LogIn = LogIn;
});
//# sourceMappingURL=logIn.js.map
///<amd-module name="utils/router"/>
define("utils/router", ["require", "exports"], function (require, exports) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Router = (function () {
        function Router(options) {
            this.root = "/";
            this.mode = options && options.mode && options.mode === RouterMode.History && !!(history.pushState)
                ? RouterMode.History
                : RouterMode.Hash;
            this.root = options && options.root ? "/" + this.clearSlashes(options.root) + "/" : "/";
            this.routes = new Array();
        }
        Router.prototype.add = function (route, handler) {
            this.routes.push({ route: route, handler: handler });
            return this;
        };
        Router.prototype.remove = function (route) {
            var _this = this;
            this.routes.forEach(function (r, i) {
                if (r.route === route) {
                    _this.routes.splice(i, 1);
                }
            });
            return this;
        };
        Router.prototype.navigate = function (path) {
            path = path ? path : "";
            if (this.mode === RouterMode.History)
                history.pushState({ path: path }, this.clearSlashes(path), this.clearSlashes(path));
            else
                window.location.href = window.location.href.replace(/#(.*)$/, "") + "#" + path;
        };
        Router.prototype.check = function (fragment) {
            if (fragment === null || typeof fragment === "undefined")
                fragment = this.getFragment();
            for (var i = 0; i < this.routes.length; i++) {
                var match = fragment.match(this.routes[i].route);
                if (match) {
                    match.shift();
                    this.routes[i].handler.apply({}, match);
                    return;
                }
            }
        };
        Router.prototype.getFragment = function () {
            var fragment;
            if (this.mode === RouterMode.History) {
                fragment = this.clearSlashes(decodeURI(location.pathname + location.search));
                fragment = fragment.replace(/\?(.*)$/, "");
                fragment = this.root !== "/" ? fragment.replace(this.root, "") : fragment;
            }
            else {
                var match = window.location.href.match(/#(.*)$/);
                fragment = match ? match[1] : "";
            }
            return this.clearSlashes(fragment);
        };
        Router.prototype.start = function () {
            var _this = this;
            var current = this.root;
            var fn = function () {
                if (current !== _this.getFragment()) {
                    current = _this.getFragment();
                    _this.check(current);
                }
            };
            clearInterval(this.listener);
            this.listener = setInterval(fn, 50);
            return this;
        };
        Router.prototype.clearSlashes = function (path) {
            return path.toString().replace(/\/$/, "").replace(/^\//, "");
        };
        return Router;
    }());
    exports.Router = Router;
    var RouterMode;
    (function (RouterMode) {
        RouterMode[RouterMode["Hash"] = 0] = "Hash";
        RouterMode[RouterMode["History"] = 1] = "History";
    })(RouterMode = exports.RouterMode || (exports.RouterMode = {}));
});
//# sourceMappingURL=router.js.map
///<amd-module name="home/buildings/buildings"/>
define("home/buildings/buildings", ["require", "exports", "knockout", "utils/communication/rest"], function (require, exports, ko, rest) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Buildings = (function () {
        function Buildings() {
            var _this = this;
            this.buildings = ko.observableArray([]);
            rest.get("buildings", "").done(function (data) {
                _this.buildings(data);
            });
        }
        Buildings.prototype.dispose = function () {
        };
        return Buildings;
    }());
    exports.Buildings = Buildings;
});
//# sourceMappingURL=buildings.js.map
///<amd-module name="home/notifications/notifications"/>
define("home/notifications/notifications", ["require", "exports", "knockout"], function (require, exports, ko) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    var Notifications = (function () {
        function Notifications() {
            this.newNotifications = ko.observableArray(["Notification1", "Notification2"]);
        }
        Notifications.prototype.dispose = function () {
        };
        return Notifications;
    }());
    exports.Notifications = Notifications;
});
//# sourceMappingURL=notifications.js.map
///<amd-module name="utils/communication/rest"/>
define("utils/communication/rest", ["require", "exports", "jquery", "app"], function (require, exports, $, app_1) {
    "use strict";
    Object.defineProperty(exports, "__esModule", { value: true });
    function get(controller, action) {
        var url = app_1.App.apiUrl + "/" + controller + "/" + action;
        return $.ajax({
            headers: {
                "Authorization": "bearer " + readToken()
            },
            url: url
        }).always(function (xhr) {
            if (xhr.status === 401)
                app_1.AppSingleton.getInstance().unauthorize();
        });
        ;
    }
    exports.get = get;
    function post(controller, action, body) {
        var url = app_1.App.apiUrl + "/" + controller + "/" + action;
        return $.ajax({
            contentType: 'application/json',
            data: JSON.stringify(body),
            type: "POST",
            headers: {
                "authorization": "bearer " + readToken()
            },
            url: url
        }).always(function (xhr) {
            if (xhr.status === 401)
                app_1.AppSingleton.getInstance().unauthorize();
        });
    }
    exports.post = post;
    function readToken() {
        var nameEQ = "bubelsoftToken=";
        var ca = document.cookie.split(';');
        for (var i = 0; i < ca.length; i++) {
            var c = ca[i];
            while (c.charAt(0) == ' ')
                c = c.substring(1, c.length);
            if (c.indexOf(nameEQ) == 0)
                return c.substring(nameEQ.length, c.length);
        }
        return null;
    }
});
//# sourceMappingURL=rest.js.map